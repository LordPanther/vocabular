POPUP DIALOG
  return CustomDismissible(
                              key: Key(collections[index] as String),
                              onDismissed: (direction) {
                                _onDismissed(context, collections[index]);
                              },
                              child: CollectionsModelCard(
                                collection: collections[index],
                              ),
                            );


  // void showPopupDialog(BuildContext context) {
  //   showGeneralDialog(
  //     context: context,
  //     barrierDismissible: false,
  //     barrierLabel: MaterialLocalizations.of(context).modalBarrierDismissLabel,
  //     barrierColor: Colors.black.withOpacity(0.5),
  //     transitionDuration: const Duration(milliseconds: 500),
  //     pageBuilder: (BuildContext context, Animation<double> animation,
  //         Animation<double> secondaryAnimation) {
  //       TextEditingController textController = TextEditingController();

  //       return Dialog(
  //         backgroundColor: Colors.transparent,
  //         child: Stack(
  //           children: <Widget>[
  //             Container(
  //               padding: const EdgeInsets.all(20),
  //               decoration: BoxDecoration(
  //                 color: Colors.white,
  //                 borderRadius: BorderRadius.circular(10),
  //               ),
  //               child: Column(
  //                 mainAxisSize: MainAxisSize.min,
  //                 crossAxisAlignment: CrossAxisAlignment.end,
  //                 children: [
  //                   TextField(
  //                     controller: textController,
  //                     decoration: const InputDecoration(
  //                       hintText: 'Enter text',
  //                     ),
  //                     autocorrect: true,
  //                     autofocus: true,
  //                   ),
  //                   const SizedBox(
  //                     height: 15,
  //                   ),
  //                   IconButton(
  //                     onPressed: onLoadWord,
  //                     icon: const Icon(CupertinoIcons.arrow_right),
  //                   ),
  //                 ],
  //               ),
  //             ),
  //           ],
  //         ),
  //       );
  //     },
  //     transitionBuilder: (context, animation, secondaryAnimation, child) {
  //       return BackdropFilter(
  //         filter: ImageFilter.blur(
  //           sigmaX: 4 * animation.value,
  //           sigmaY: 4 * animation.value,
  //         ),
  //         child: FadeTransition(
  //           opacity: animation,
  //           child: child,
  //         ),
  //       );
  //     },
  //   );
  // }

  ///////////////////////////

  import 'package:flutter/material.dart';
// import 'package:flutter_bloc/flutter_bloc.dart';
// import 'package:vocab_app/configs/router.dart';
// import 'package:vocab_app/configs/size_config.dart';
// import 'package:vocab_app/constants/color_constant.dart';
// import 'package:vocab_app/constants/font_constant.dart';
// import 'package:vocab_app/data/models/collections_model.dart';
// import 'package:vocab_app/data/models/daily_word_model.dart';
// import 'package:vocab_app/presentation/screens/home_screen/home/home_bloc.dart';
// import 'package:vocab_app/presentation/screens/home_screen/home/home_state.dart';
// import 'package:vocab_app/presentation/widgets/others/daily_word_widget.dart';
// import 'package:vocab_app/presentation/widgets/single_card/collections_card.dart';
// import 'package:vocab_app/utils/translate.dart';

// class HomeBody extends StatefulWidget {
//   const HomeBody({super.key});

//   @override
//   State<HomeBody> createState() => _HomeBodyState();
// }

// class _HomeBodyState extends State<HomeBody> {
//   @override
//   Widget build(BuildContext context) {
//     return SliverToBoxAdapter(
//       child: BlocBuilder<HomeBloc, HomeState>(
//         builder: (context, homeState) {
//           return SingleChildScrollView(
//             child: ListCollectionsModel()
//           );
//         },
//       ),
//     );
//   }

//   _buildDailyWordHeading(BuildContext context) {
//     return Container(
//         padding: const EdgeInsets.only(
//           left: 10,
//           top: 10,
//           bottom: 10,
//         ),
//         alignment: Alignment.centerLeft,
//         height: SizeConfig.defaultSize * 10,
//         child: Text(
//           Translate.of(context).translate('daily_word'),
//           style: FONT_CONST.MEDIUM_DEFAULT_18,
//         ));
//   }

//   _buildDailyWord(BuildContext context, WordModel dailyWord) {
//     return Container(
//       decoration: BoxDecoration(
//         color: Colors.white,
//         boxShadow: [
//           BoxShadow(
//             blurRadius: 1,
//             spreadRadius: 1,
//             color: COLOR_CONST.cardShadowColor.withOpacity(0.2),
//             offset: const Offset(0, 2),
//           ),
//         ],
//       ),
//       child: DailyWordWidget(wordMap: dailyWord),
//     );
//   }

//   _buildCollectionsHeading(BuildContext context) {
//     return Container(
//         padding: const EdgeInsets.only(
//           left: 10,
//           top: 10,
//           bottom: 10,
//         ),
//         alignment: Alignment.centerLeft,
//         height: SizeConfig.defaultSize * 10,
//         child: Text(
//           Translate.of(context).translate('word_collections'),
//           style: FONT_CONST.MEDIUM_DEFAULT_18,
//         ));
//   }

//   _buildHomeCollections(
//       BuildContext context, List<CollectionsModel> collections) {
//     return Container(
//       padding: EdgeInsets.all(SizeConfig.defaultPadding),
//       child: ListView.builder(
//         itemCount: collections.length,
//         itemBuilder: (context, index) {
//           return CollectionsModelCard(
//             collection: collections[index],
//             onPressed: () {
//               Navigator.pushNamed(
//                 context,
//                 AppRouter.COLLECTIONS,
//                 arguments: collections[index],
//               );
//             },
//           );
//         },
//         shrinkWrap: true,
//         // physics: const NeverScrollableScrollPhysics(),
//       ),
//     );
//   }
// }

/////////////////////////////////////////////////

import 'package:flutter/cupertino.dart';
// import 'package:flutter/material.dart';
// import 'package:flutter_bloc/flutter_bloc.dart';
// import 'package:vocab_app/configs/router.dart';
// import 'package:vocab_app/configs/size_config.dart';
// import 'package:vocab_app/constants/color_constant.dart';
// import 'package:vocab_app/constants/font_constant.dart';
// import 'package:vocab_app/data/models/daily_word_model.dart';
// import 'package:vocab_app/presentation/common_blocs/collections/bloc.dart';
// import 'package:vocab_app/utils/dialog.dart';
// import 'package:vocab_app/utils/snackbar.dart';
// import 'package:vocab_app/utils/translate.dart';

// class ListCollectionsModel extends StatefulWidget {
//   const ListCollectionsModel({super.key});

//   @override
//   State<ListCollectionsModel> createState() => _ListCollectionsModelState();
// }

// class _ListCollectionsModelState extends State<ListCollectionsModel> {
//   late CollectionsBloc addWordBloc;

//   final TextEditingController word = TextEditingController();
//   final TextEditingController definition = TextEditingController();
//   final TextEditingController acronym = TextEditingController();
//   final TextEditingController note = TextEditingController();

//   @override
//   void initState() {
//     addWordBloc = BlocProvider.of<CollectionsBloc>(context);
//     super.initState();
//   }

//   @override
//   void dispose() {
//     word.dispose();
//     definition.dispose();
//     acronym.dispose();
//     note.dispose();
//     super.dispose();
//   }

//   bool get isPopulated => word.text.isNotEmpty;

//   bool isLoadWordButtonEnabled() {
//     return isPopulated;
//   }

//   onAddToCollection() {
//     addWordBloc.add(AddWordToCollection());
//   }

//   void onAddWord() async {
//     if (isLoadWordButtonEnabled()) {
//       WordModel wordModel = WordModel(
//         id: "",
//         audio: "",
//         definition: definition.text,
//         acronym: acronym.text,
//         partOfSpeech: "",
//         note: note.text,
//         word: word.text,
//       );
//       addWordBloc.add(AddWord(word: wordModel));

//       // Clear text field
//       // clearTextFields;
//     }
//   }

//   // clearTextFields() {
//   //   word.clear();
//   //   definition.clear();
//   //   acronym.clear();
//   //   note.clear();
//   //   setState(() {});
//   // }

//   @override
//   Widget build(BuildContext context) {
//     return BlocListener<CollectionsBloc, CollectionsState>(
//       listener: (context, state) {
//         /// Submitting
//         if (state is CollectionsLoading) {
//           UtilDialog.showWaiting(context);
//         }

//         /// Success
//         if (state is CollectionsLoaded) {
//           UtilDialog.hideWaiting(context);
//           UtilSnackBar.showSnackBarContent(context,
//               content: "New word added successfully");
//           Navigator.pushNamed(context, AppRouter.HOME);
//         }

//         /// Failure
//         if (state is CollectionsLoadFailure) {
//           UtilDialog.hideWaiting(context);
//           UtilDialog.showInformation(context, content: state.error);
//         }
//       },
//       child: BlocBuilder<CollectionsBloc, CollectionsState>(
//           builder: (context, state) {
//             if (state is CollectionsLoading) {
//               return UtilDialog.showWaiting(context);
//             }
//         return Container(
//           margin: EdgeInsets.symmetric(
//             horizontal: SizeConfig.defaultSize * 3,
//           ),
//           padding: EdgeInsets.symmetric(
//             horizontal: SizeConfig.defaultPadding,
//           ),
//           child: Form(
//             child: Column(
//               crossAxisAlignment: CrossAxisAlignment.end,
//               children: <Widget>[
//                 _buildHeaderText(),
//                 SizedBox(height: SizeConfig.defaultSize * 3),
//                 _buildTextFieldWord(),
//                 SizedBox(height: SizeConfig.defaultSize * 3),
//                 _buildTextFieldDefinition(),
//                 SizedBox(height: SizeConfig.defaultSize * 3),
//                 _buildTextFieldAcronym(),
//                 SizedBox(height: SizeConfig.defaultSize * 3),
//                 _buildTextFieldNote(),
//                 SizedBox(height: SizeConfig.defaultSize * 3),
//                 _buildButtonAddWord()
//               ],
//             ),
//           ),
//         );
//       }),
//     );
//   }

//   _buildHeaderText() {
//     return Center(
//       child: Text(
//         Translate.of(context).translate('add_word_form'),
//         style: FONT_CONST.BOLD_DEFAULT_16,
//       ),
//     );
//   }

//   _buildTextFieldWord() {
//     return TextFormField(
//       style: TextStyle(
//           color: COLOR_CONST.textColor, fontSize: SizeConfig.defaultSize * 1.6),
//       cursorColor: COLOR_CONST.textColor,
//       textInputAction: TextInputAction.next,
//       controller: word,
//       autovalidateMode: AutovalidateMode.always,
//       keyboardType: TextInputType.text,
//       decoration: InputDecoration(
//           labelText: Translate.of(context).translate('add_word'),
//           labelStyle: const TextStyle(color: COLOR_CONST.textColor),
//           // prefixIcon: const Icon(Icons.email_outlined, color: Colors.white),
//           focusedBorder: const OutlineInputBorder(
//               borderSide: BorderSide(color: COLOR_CONST.textColor)),
//           enabledBorder: const OutlineInputBorder(
//               borderSide: BorderSide(color: COLOR_CONST.textColor))),
//     );
//   }

//   _buildTextFieldDefinition() {
//     return TextFormField(
//       style: TextStyle(
//           color: COLOR_CONST.textColor, fontSize: SizeConfig.defaultSize * 1.6),
//       cursorColor: COLOR_CONST.textColor,
//       textInputAction: TextInputAction.next,
//       controller: definition,
//       autovalidateMode: AutovalidateMode.always,
//       keyboardType: TextInputType.multiline,
//       decoration: InputDecoration(
//           labelText: Translate.of(context).translate('add_definition'),
//           labelStyle: const TextStyle(color: COLOR_CONST.textColor),
//           // prefixIcon: const Icon(Icons.email_outlined, color: Colors.white),
//           focusedBorder: const OutlineInputBorder(
//               borderSide: BorderSide(color: COLOR_CONST.textColor)),
//           enabledBorder: const OutlineInputBorder(
//               borderSide: BorderSide(color: COLOR_CONST.textColor))),
//     );
//   }

//   _buildTextFieldAcronym() {
//     return TextFormField(
//       style: TextStyle(
//           color: COLOR_CONST.textColor, fontSize: SizeConfig.defaultSize * 1.6),
//       cursorColor: COLOR_CONST.textColor,
//       textInputAction: TextInputAction.next,
//       controller: acronym,
//       autovalidateMode: AutovalidateMode.always,
//       keyboardType: TextInputType.text,
//       decoration: InputDecoration(
//           labelText: Translate.of(context).translate('add_acronym'),
//           labelStyle: const TextStyle(color: COLOR_CONST.textColor),
//           // prefixIcon: const Icon(Icons.email_outlined, color: Colors.white),
//           focusedBorder: const OutlineInputBorder(
//               borderSide: BorderSide(color: COLOR_CONST.textColor)),
//           enabledBorder: const OutlineInputBorder(
//               borderSide: BorderSide(color: COLOR_CONST.textColor))),
//     );
//   }

//   _buildTextFieldNote() {
//     return TextFormField(
//       style: TextStyle(
//           color: COLOR_CONST.textColor, fontSize: SizeConfig.defaultSize * 1.6),
//       cursorColor: COLOR_CONST.textColor,
//       textInputAction: TextInputAction.next,
//       controller: note,
//       autovalidateMode: AutovalidateMode.always,
//       keyboardType: TextInputType.multiline,
//       decoration: InputDecoration(
//           labelText: Translate.of(context).translate('add_note'),
//           labelStyle: const TextStyle(color: COLOR_CONST.textColor),
//           // prefixIcon: const Icon(Icons.email_outlined, color: Colors.white),
//           focusedBorder: const OutlineInputBorder(
//               borderSide: BorderSide(color: COLOR_CONST.textColor)),
//           enabledBorder: const OutlineInputBorder(
//               borderSide: BorderSide(color: COLOR_CONST.textColor))),
//     );
//   }

//   _buildButtonAddWord() {
//     return IconButton(
//       onPressed: onAddWord,
//       icon: const Icon(CupertinoIcons.arrow_right),
//     );
//   }
// }



  